class Solution {
public:

    // TC: O(n)
    // SC: O(n)

    bool isValid(string s) {
        stack<char> stack;
        unordered_map<char, char> map = {{')', '('}, {']', '['}, {'}', '{'}};

        for (char curChar : s) {
            if (map.find(curChar) == map.end()) {
                stack.push(curChar);
            } else {
                if (stack.empty()) {
                    return false;
                }

                char top = stack.top();
                stack.pop();

                if (top != map[curChar]) {
                    return false;
                }
            }
        }

        return stack.empty();
    }
};
